{"ast":null,"code":"var _jsxFileName = \"/Users/linoyhorvat/Documents/bootcamp/Git/Projects/mid-project/songTrivia/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Lyric from \"./Lyric\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  const songsArr = [\"we%20will%20rock%20you\", \"frozen\", \"Beat%20It\", \"Smells%20Like%20Teen%20Spirit\", \"Billie%20Jean\", \"let%20it%20be\", \"help\", \"hey%20jude\", \"come%20together\", \"yesterday\", \"i%20want%20to%20break%20free\", \"bohemian%20rhapsody\", \"crazy%20little%20thing%20called%20love\", \"Like%20a%20Prayer\", \"Every%20Breath%20You%20Take\", \"Eye%20of%20the%20Tiger\", \"Africa\", \"Sometimes\", \"uptown%20girl\"];\n  const artistsArr = [\"queen\", \"madonna\", \"Michael%20Jackson\", \"Nirvana\", \"Michael%20Jackson\", \"the%20beatles\", \"the%20beatles\", \"the%20beatles\", \"the%20beatles\", \"the%20beatles\", \"queen\", \"queen\", \"queen\", \"Madonna\", \"Police\", \"Survivor\", \"Toto\", \"Britney%20Spears\", \"billy%20joel\"]; // let random = Math.floor(songsArr.length * Math.random());\n\n  let random = 17;\n  const [randomNum, setRandomNum] = useState(random);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [counter, setCounter] = useState(30);\n  localStorage.setItem(\"score\", JSON.stringify(score));\n  const history = useHistory();\n  const [style, setStyle] = useState({\n    color: \"rgba(47, 247, 7, 0.886)\"\n  });\n  useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n\n    if (counter <= 5) {\n      setStyle({\n        color: \"red\"\n      });\n    }\n\n    if (counter === 0) {\n      history.push(\"/results\");\n    }\n  }, [counter]);\n  useEffect(() => {\n    console.log(songsArr[randomNum].split(\"%20\").join(\" \"));\n    randomChoice();\n  }, [score]);\n\n  const randomChoice = () => {\n    setRandomNum(random);\n  };\n\n  const handelBackBtn = () => {\n    window.history.back();\n  };\n\n  const handelInputChange = val => {\n    console.log(\"val\");\n    setInputValue(val);\n  };\n\n  const createLyrics = () => {\n    return /*#__PURE__*/_jsxDEV(Lyric, {\n      songName: songsArr[randomNum],\n      artistName: artistsArr[randomNum]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      if (inputValue.toLowerCase() == songsArr[randomNum].split(\"%20\").join(\" \").toLowerCase()) {\n        setScore(score => score + 1);\n        localStorage.setItem(\"score\", JSON.stringify(score + 1));\n        setInputValue(\"\");\n      }\n    }\n  };\n\n  const handelSubmit = () => {\n    console.log(inputValue.toLowerCase());\n\n    if (inputValue.toLowerCase() == songsArr[randomNum].split(\"%20\").join(\" \").toLowerCase()) {\n      setScore(score => score + 1);\n      localStorage.setItem(\"score\", JSON.stringify(score + 1));\n      setInputValue(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown\",\n      style: style,\n      children: [\"Countdown: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        placeholder: \"Guess The Song Name\",\n        type: \"text\",\n        value: inputValue,\n        onChange: event => handelInputChange(event.target.value),\n        onKeyDown: event => handleKeyDown(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit\",\n        onClick: handelSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"score\",\n      children: [\"score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), createLyrics(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handelBackBtn,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"scD1KEbKeU8QyA+izgaABb9fRMQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/linoyhorvat/Documents/bootcamp/Git/Projects/mid-project/songTrivia/src/components/Game.js"],"names":["React","useState","useEffect","Lyric","useHistory","Game","songsArr","artistsArr","random","randomNum","setRandomNum","inputValue","setInputValue","score","setScore","counter","setCounter","localStorage","setItem","JSON","stringify","history","style","setStyle","color","setTimeout","push","console","log","split","join","randomChoice","handelBackBtn","window","back","handelInputChange","val","createLyrics","handleKeyDown","e","key","toLowerCase","handelSubmit","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,cAAP;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAMC,QAAQ,GAAG,CACf,wBADe,EAEf,QAFe,EAGf,WAHe,EAIf,+BAJe,EAKf,eALe,EAMf,eANe,EAOf,MAPe,EAQf,YARe,EASf,iBATe,EAUf,WAVe,EAWf,8BAXe,EAYf,qBAZe,EAaf,wCAbe,EAcf,mBAde,EAef,6BAfe,EAgBf,wBAhBe,EAiBf,QAjBe,EAkBf,WAlBe,EAmBf,eAnBe,CAAjB;AAqBA,QAAMC,UAAU,GAAG,CACjB,OADiB,EAEjB,SAFiB,EAGjB,mBAHiB,EAIjB,SAJiB,EAKjB,mBALiB,EAMjB,eANiB,EAOjB,eAPiB,EAQjB,eARiB,EASjB,eATiB,EAUjB,eAViB,EAWjB,OAXiB,EAYjB,OAZiB,EAajB,OAbiB,EAcjB,SAdiB,EAejB,QAfiB,EAgBjB,UAhBiB,EAiBjB,MAjBiB,EAkBjB,kBAlBiB,EAmBjB,cAnBiB,CAAnB,CAtB6B,CA2C7B;;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACO,MAAD,CAA1C;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACAgB,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeP,KAAf,CAA9B;AACA,QAAMQ,OAAO,GAAGjB,UAAU,EAA1B;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC;AAAEuB,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAlC;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,GAAG,CAAV,IAAeU,UAAU,CAAC,MAAMT,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjB,EAAgC,IAAhC,CAAzB;;AACA,QAAIA,OAAO,IAAI,CAAf,EAAkB;AAChBQ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAD,CAAR;AACD;;AACD,QAAIT,OAAO,KAAK,CAAhB,EAAmB;AACjBM,MAAAA,OAAO,CAACK,IAAR,CAAa,UAAb;AACD;AACF,GARQ,EAQN,CAACX,OAAD,CARM,CAAT;AAUAb,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAQ,CAACG,SAAD,CAAR,CAAoBoB,KAApB,CAA0B,KAA1B,EAAiCC,IAAjC,CAAsC,GAAtC,CAAZ;AACAC,IAAAA,YAAY;AACb,GAHQ,EAGN,CAAClB,KAAD,CAHM,CAAT;;AAKA,QAAMkB,YAAY,GAAG,MAAM;AACzBrB,IAAAA,YAAY,CAACF,MAAD,CAAZ;AACD,GAFD;;AAGA,QAAMwB,aAAa,GAAG,MAAM;AAC1BC,IAAAA,MAAM,CAACZ,OAAP,CAAea,IAAf;AACD,GAFD;;AAGA,QAAMC,iBAAiB,GAAIC,GAAD,IAAS;AACjCT,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAhB,IAAAA,aAAa,CAACwB,GAAD,CAAb;AACD,GAHD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzB,wBACE,QAAC,KAAD;AACE,MAAA,QAAQ,EAAE/B,QAAQ,CAACG,SAAD,CADpB;AAEE,MAAA,UAAU,EAAEF,UAAU,CAACE,SAAD;AAFxB;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD;;AAQA,QAAM6B,aAAa,GAAIC,CAAD,IAAO;AAC3B,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrB,UACE7B,UAAU,CAAC8B,WAAX,MAA4BnC,QAAQ,CAACG,SAAD,CAAR,CAAoBoB,KAApB,CAA0B,KAA1B,EAAiCC,IAAjC,CAAsC,GAAtC,EAA2CW,WAA3C,EAD9B,EAEE;AACA3B,QAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACAI,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeP,KAAK,GAAG,CAAvB,CAA9B;AACAD,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF;AACF,GAVD;;AAWA,QAAM8B,YAAY,GAAG,MAAM;AACzBf,IAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAU,CAAC8B,WAAX,EAAZ;;AACA,QACE9B,UAAU,CAAC8B,WAAX,MAA4BnC,QAAQ,CAACG,SAAD,CAAR,CAAoBoB,KAApB,CAA0B,KAA1B,EAAiCC,IAAjC,CAAsC,GAAtC,EAA2CW,WAA3C,EAD9B,EAEE;AACA3B,MAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeP,KAAK,GAAG,CAAvB,CAA9B;AACAD,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAEU,KAAlC;AAAA,gCACcP,OADd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,WAAW,EAAC,qBAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAEJ,UAJT;AAKE,QAAA,QAAQ,EAAGgC,KAAD,IAAWR,iBAAiB,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CALxC;AAME,QAAA,SAAS,EAAGF,KAAD,IAAWL,aAAa,CAACK,KAAD;AANrC;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAED,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAiBE;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAAA,4BAAkC7B,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,EAkBGwB,YAAY,EAlBf,eAmBE;AAAQ,MAAA,OAAO,EAAEL,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAnIuB3B,I;UAkDND,U;;;KAlDMC,I","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Lyric from \"./Lyric\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../index.css\";\r\n\r\nexport default function Game() {\r\n  const songsArr = [\r\n    \"we%20will%20rock%20you\",\r\n    \"frozen\",\r\n    \"Beat%20It\",\r\n    \"Smells%20Like%20Teen%20Spirit\",\r\n    \"Billie%20Jean\",\r\n    \"let%20it%20be\",\r\n    \"help\",\r\n    \"hey%20jude\",\r\n    \"come%20together\",\r\n    \"yesterday\",\r\n    \"i%20want%20to%20break%20free\",\r\n    \"bohemian%20rhapsody\",\r\n    \"crazy%20little%20thing%20called%20love\",\r\n    \"Like%20a%20Prayer\",\r\n    \"Every%20Breath%20You%20Take\",\r\n    \"Eye%20of%20the%20Tiger\",\r\n    \"Africa\",\r\n    \"Sometimes\",\r\n    \"uptown%20girl\"\r\n  ];\r\n  const artistsArr = [\r\n    \"queen\",\r\n    \"madonna\",\r\n    \"Michael%20Jackson\",\r\n    \"Nirvana\",\r\n    \"Michael%20Jackson\",\r\n    \"the%20beatles\",\r\n    \"the%20beatles\",\r\n    \"the%20beatles\",\r\n    \"the%20beatles\",\r\n    \"the%20beatles\",\r\n    \"queen\",\r\n    \"queen\",\r\n    \"queen\",\r\n    \"Madonna\",\r\n    \"Police\",\r\n    \"Survivor\",\r\n    \"Toto\",\r\n    \"Britney%20Spears\",\r\n    \"billy%20joel\"\r\n  ];\r\n  // let random = Math.floor(songsArr.length * Math.random());\r\n  let random = 17;\r\n  const [randomNum, setRandomNum] = useState(random);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [score, setScore] = useState(0);\r\n  const [counter, setCounter] = useState(30);\r\n  localStorage.setItem(\"score\", JSON.stringify(score));\r\n  const history = useHistory();\r\n  const [style, setStyle] = useState({ color: \"rgba(47, 247, 7, 0.886)\" });\r\n\r\n  useEffect(() => {\r\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n    if (counter <= 5) {\r\n      setStyle({ color: \"red\" });\r\n    }\r\n    if (counter === 0) {\r\n      history.push(\"/results\");\r\n    }\r\n  }, [counter]);\r\n\r\n  useEffect(() => {\r\n    console.log(songsArr[randomNum].split(\"%20\").join(\" \"));\r\n    randomChoice();\r\n  }, [score]);\r\n\r\n  const randomChoice = () => {\r\n    setRandomNum(random);\r\n  };\r\n  const handelBackBtn = () => {\r\n    window.history.back();\r\n  };\r\n  const handelInputChange = (val) => {\r\n    console.log(\"val\");\r\n    setInputValue(val);\r\n  };\r\n  const createLyrics = () => {\r\n    return (\r\n      <Lyric\r\n        songName={songsArr[randomNum]}\r\n        artistName={artistsArr[randomNum]}\r\n      />\r\n    );\r\n  };\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      if (\r\n        inputValue.toLowerCase() == songsArr[randomNum].split(\"%20\").join(\" \").toLowerCase()\r\n      ) {\r\n        setScore((score) => score + 1);\r\n        localStorage.setItem(\"score\", JSON.stringify(score + 1));\r\n        setInputValue(\"\");\r\n      }\r\n    }\r\n  };\r\n  const handelSubmit = () => {\r\n    console.log(inputValue.toLowerCase());\r\n    if (\r\n      inputValue.toLowerCase() == songsArr[randomNum].split(\"%20\").join(\" \").toLowerCase()\r\n    ) {\r\n      setScore((score) => score + 1);\r\n      localStorage.setItem(\"score\", JSON.stringify(score + 1));\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"countdown\" style={style}>\r\n        Countdown: {counter}\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <input\r\n          className=\"input\"\r\n          placeholder=\"Guess The Song Name\"\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(event) => handelInputChange(event.target.value)}\r\n          onKeyDown={(event) => handleKeyDown(event)}\r\n        />\r\n        <button className=\"submit\" onClick={handelSubmit}>\r\n          Submit\r\n        </button>\r\n      </div>\r\n      <button className=\"score\">score: {score}</button>\r\n      {createLyrics()}\r\n      <button onClick={handelBackBtn}>Back</button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}