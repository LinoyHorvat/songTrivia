{"ast":null,"code":"var _jsxFileName = \"/Users/linoyhorvat/Documents/bootcamp/Git/Projects/mid-project/songTrivia/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport Lyric from \"./Lyric\";\nimport Countdown from 'react-countdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  const songsName = ['we%20will%20rock%20you', 'frozen', 'Beat%20It', 'Smells%20Like%20Teen%20Spirit', 'Billie%20Jean'];\n  const artistsArr = ['queen', 'madonna', 'Michael%20Jackson', 'Nirvana', 'Michael%20Jackson'];\n  let random = Math.floor(songsName.length * Math.random());\n  const [randomNum, setRandomNum] = useState(random);\n  const [inputValue, setInputValue] = useState('');\n  const [score, setScore] = useState(0);\n  const [counter, setCounter] = React.useState(5);\n  const [timeOver, setTimeOver] = useState(false);\n  React.useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n\n    if (counter == 0) {\n      createLyrics();\n      console.log('yes');\n      setTimeOver(true);\n    }\n  }, [counter]);\n  useEffect(() => {\n    randomChoice();\n    setTimeOver(false); // setCounter(5)\n  }, [timeOver]);\n\n  const randomChoice = () => {\n    setRandomNum(random);\n  };\n\n  const handelBackBtn = () => {\n    window.history.back();\n    console.log(window.history.back);\n  };\n\n  const handelInputChange = val => {\n    randomChoice();\n    setInputValue(val);\n\n    if (inputValue == songsName[0].split('%20').join(' ')) {\n      console.log('correct');\n      setScore(score + 5);\n    }\n  };\n\n  const createLyrics = () => {\n    return /*#__PURE__*/_jsxDEV(Lyric, {\n      songName: songsName[randomNum],\n      artistName: artistsArr[randomNum]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Countdown: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Guess The Song Name\",\n      type: \"text\",\n      value: inputValue,\n      onChange: event => handelInputChange(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"score\",\n      children: [\"score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: randomNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), createLyrics(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handelBackBtn,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), console.log(inputValue)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n} // <Countdown\n// date={Date.now() + 10000}\n// intervalDelay={0}\n// precision={3}\n// renderer={props => <div>{props.total}</div>}\n// />\n\n_s(Game, \"Scl+vYlvqBWhurJvUl04+qeIpxg=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/linoyhorvat/Documents/bootcamp/Git/Projects/mid-project/songTrivia/src/components/Game.js"],"names":["React","useState","useEffect","Lyric","Countdown","Game","songsName","artistsArr","random","Math","floor","length","randomNum","setRandomNum","inputValue","setInputValue","score","setScore","counter","setCounter","timeOver","setTimeOver","setTimeout","createLyrics","console","log","randomChoice","handelBackBtn","window","history","back","handelInputChange","val","split","join","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\nimport Lyric from \"./Lyric\"\r\nimport Countdown from 'react-countdown';\r\n\r\n\r\nexport default function Game() {\r\n  const songsName = ['we%20will%20rock%20you', 'frozen', 'Beat%20It','Smells%20Like%20Teen%20Spirit','Billie%20Jean']\r\n  const artistsArr =['queen', 'madonna','Michael%20Jackson','Nirvana','Michael%20Jackson']\r\n  let random = Math.floor(songsName.length*Math.random());\r\n  const [randomNum, setRandomNum] = useState(random);\r\n  const [inputValue, setInputValue] = useState('')\r\n  const [score, setScore] = useState(0);\r\n  const [counter, setCounter] = React.useState(5);\r\n  const [timeOver, setTimeOver] = useState(false)\r\n  React.useEffect(() => {\r\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n    if (counter == 0){\r\n      createLyrics()\r\n      console.log('yes');\r\n      setTimeOver(true)\r\n    }\r\n  }, [counter]);\r\n  \r\n  useEffect( () => {\r\n    randomChoice();\r\n    setTimeOver(false)\r\n    // setCounter(5)\r\n  },[timeOver])\r\n  \r\n  const randomChoice = () => {\r\n    setRandomNum(random)\r\n  }\r\n  const handelBackBtn = () => {\r\n    window.history.back();\r\n    console.log(window.history.back);\r\n  }\r\n  const handelInputChange = (val) => {\r\n    randomChoice();\r\n    setInputValue(val)\r\n    if (inputValue == songsName[0].split('%20').join(' ')) {\r\n      console.log('correct');\r\n      setScore(score+5)\r\n    }\r\n  }\r\n  const createLyrics =() => {\r\n    return <Lyric songName = {songsName[randomNum]} artistName = {artistsArr[randomNum]}/>\r\n  }\r\n\r\n\r\n  return (\r\n    <div className = \"game-container\">\r\n    <div>Countdown: {counter}</div>\r\n    <input placeholder=\"Guess The Song Name\" type=\"text\" value = {inputValue} onChange={event => handelInputChange(event.target.value)}/>\r\n    <button className=\"score\">score: {score}</button>\r\n    <div>{randomNum}</div>\r\n    {createLyrics()}\r\n    <button onClick={handelBackBtn}>Back</button>\r\n    {console.log(inputValue)}\r\n    </div>\r\n  )\r\n}\r\n// <Countdown\r\n// date={Date.now() + 10000}\r\n// intervalDelay={0}\r\n// precision={3}\r\n// renderer={props => <div>{props.total}</div>}\r\n// />"]},"metadata":{},"sourceType":"module"}