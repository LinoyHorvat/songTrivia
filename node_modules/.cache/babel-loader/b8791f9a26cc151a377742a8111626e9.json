{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Artist = void 0;\n\nconst Song_1 = require(\"../Songs/Song\");\n\nconst Constants_1 = require(\"../Constants\");\n\nclass Artist {\n  constructor(client, res) {\n    let partial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var _a;\n\n    this.client = client;\n    this.partial = partial;\n    this.name = res.name;\n    this.id = +res.id;\n    this.url = res.url;\n    this.thumbnail = res.image_url;\n    this.image = res.header_image_url;\n    this.iq = (_a = +res.iq) !== null && _a !== void 0 ? _a : 0;\n    this.verified = {\n      normal: res.is_verified,\n      meme: res.is_meme_verified\n    };\n    this.socialmedia = {\n      facebook: res.facebook_name || undefined,\n      twitter: res.twitter_name || undefined\n    };\n    this.raw = res;\n  }\n  /**\r\n   * Fetches the songs of the Artist (Requires Key)\r\n   * @example const Songs = await Artist.songs();\r\n   */\n\n\n  songs() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _a, _b;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.client.key) {\n        throw new Error(Constants_1.Constants.REQUIRES_KEY);\n      }\n\n      if (typeof options !== \"object\") {\n        throw new Error(\"'options' must be a type of 'object'\");\n      }\n\n      const per_page = (_a = options.per_page) !== null && _a !== void 0 ? _a : 20;\n      const sort = options.sort && Constants_1.Constants.ARTIST_SORTS.includes(options.sort) ? options.sort : \"title\";\n      const page = (_b = options.page) !== null && _b !== void 0 ? _b : 1;\n      const data = yield this.client.api.get(`/songs?page=${page}&per_page=${per_page}&sort=${sort}`);\n      const parsed = JSON.parse(data);\n      return parsed.songs.map(s => new Song_1.Song(this.client, s, true));\n    });\n  }\n  /**\r\n   * Fetches All Information about the Artist and updates all the existing Properties (Requires Key)\r\n   * @example const NewArtist = await Artist.fetch();\r\n   */\n\n\n  fetch() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.client.key) {\n        throw new Error(Constants_1.Constants.REQUIRES_KEY);\n      }\n\n      const data = yield this.client.api.get(`/artists/${this.id}`);\n      const parsed = JSON.parse(data);\n      this.socialmedia.facebook = parsed.artist.facebook_name;\n      this.socialmedia.twitter = parsed.artist.twitter_name;\n      this.raw = parsed.artist;\n      this.partial = false;\n      return new Artist(this.client, parsed.artist, false);\n    });\n  }\n\n}\n\nexports.Artist = Artist;","map":{"version":3,"sources":["/Users/linoyhorvat/Documents/bootcamp/Git/Projects/mid-project/songTrivia/node_modules/genius-lyrics/dist/Artists/Artist.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","Artist","Song_1","require","Constants_1","constructor","client","res","partial","_a","name","id","url","thumbnail","image_url","image","header_image_url","iq","verified","normal","is_verified","meme","is_meme_verified","socialmedia","facebook","facebook_name","undefined","twitter","twitter_name","raw","songs","options","_b","key","Error","Constants","REQUIRES_KEY","per_page","sort","ARTIST_SORTS","includes","page","data","api","get","parsed","JSON","parse","map","s","Song","fetch","artist"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Artist = void 0;\r\nconst Song_1 = require(\"../Songs/Song\");\r\nconst Constants_1 = require(\"../Constants\");\r\nclass Artist {\r\n    constructor(client, res, partial = false) {\r\n        var _a;\r\n        this.client = client;\r\n        this.partial = partial;\r\n        this.name = res.name;\r\n        this.id = +res.id;\r\n        this.url = res.url;\r\n        this.thumbnail = res.image_url;\r\n        this.image = res.header_image_url;\r\n        this.iq = (_a = +res.iq) !== null && _a !== void 0 ? _a : 0;\r\n        this.verified = {\r\n            normal: res.is_verified,\r\n            meme: res.is_meme_verified,\r\n        };\r\n        this.socialmedia = {\r\n            facebook: res.facebook_name || undefined,\r\n            twitter: res.twitter_name || undefined,\r\n        };\r\n        this.raw = res;\r\n    }\r\n    /**\r\n     * Fetches the songs of the Artist (Requires Key)\r\n     * @example const Songs = await Artist.songs();\r\n     */\r\n    songs(options = {}) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.client.key) {\r\n                throw new Error(Constants_1.Constants.REQUIRES_KEY);\r\n            }\r\n            if (typeof options !== \"object\") {\r\n                throw new Error(\"'options' must be a type of 'object'\");\r\n            }\r\n            const per_page = (_a = options.per_page) !== null && _a !== void 0 ? _a : 20;\r\n            const sort = options.sort && Constants_1.Constants.ARTIST_SORTS.includes(options.sort)\r\n                ? options.sort\r\n                : \"title\";\r\n            const page = (_b = options.page) !== null && _b !== void 0 ? _b : 1;\r\n            const data = yield this.client.api.get(`/songs?page=${page}&per_page=${per_page}&sort=${sort}`);\r\n            const parsed = JSON.parse(data);\r\n            return parsed.songs.map((s) => new Song_1.Song(this.client, s, true));\r\n        });\r\n    }\r\n    /**\r\n     * Fetches All Information about the Artist and updates all the existing Properties (Requires Key)\r\n     * @example const NewArtist = await Artist.fetch();\r\n     */\r\n    fetch() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.client.key) {\r\n                throw new Error(Constants_1.Constants.REQUIRES_KEY);\r\n            }\r\n            const data = yield this.client.api.get(`/artists/${this.id}`);\r\n            const parsed = JSON.parse(data);\r\n            this.socialmedia.facebook = parsed.artist.facebook_name;\r\n            this.socialmedia.twitter = parsed.artist.twitter_name;\r\n            this.raw = parsed.artist;\r\n            this.partial = false;\r\n            return new Artist(this.client, parsed.artist, false);\r\n        });\r\n    }\r\n}\r\nexports.Artist = Artist;\r\n"]},"metadata":{},"sourceType":"script"}