{"ast":null,"code":"var _jsxFileName = \"/Users/linoyhorvat/Documents/bootcamp/Git/Projects/mid-project/songTrivia/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Lyric from \"./Lyric\";\nimport Results from \"./Results\";\nimport { browserHistory, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game(_ref) {\n  _s();\n\n  let {\n    setAppScore,\n    appScore\n  } = _ref;\n  const songsArr = [\"we%20will%20rock%20you\", \"frozen\", \"Beat%20It\", \"Smells%20Like%20Teen%20Spirit\", \"Billie%20Jean\", \"let%20it%20be\"];\n  const artistsArr = [\"queen\", \"madonna\", \"Michael%20Jackson\", \"Nirvana\", \"Michael%20Jackson\", \"the%20beatles\"]; // let random = Math.floor(songsArr.length * Math.random());\n\n  let random = 5;\n  const [randomNum, setRandomNum] = useState(random);\n  const [inputValue, setInputValue] = useState(\"\"); // const [score, setScore] = useState(0);\n\n  const [counter, setCounter] = useState(1); // const [timeOver, setTimeOver] = useState(false);\n\n  useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n\n    if (counter === 0) {\n      // window.location.href = \"/results\";\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this); // browserHistory.push(\"/results\");\n    }\n  }, [counter]);\n  useEffect(() => {\n    console.log(songsArr[randomNum].split(\"%20\").join(\" \"));\n    randomChoice(); // setTimeOver(false);\n    // setCounter(60);\n  }, [appScore]);\n\n  const randomChoice = () => {\n    setRandomNum(random);\n  };\n\n  const handelBackBtn = () => {\n    window.history.back();\n  };\n\n  const handelInputChange = val => {\n    console.log(\"val\");\n    setInputValue(val);\n  };\n\n  const createLyrics = () => {\n    return /*#__PURE__*/_jsxDEV(Lyric, {\n      songName: songsArr[randomNum],\n      artistName: artistsArr[randomNum]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      if (inputValue == songsArr[randomNum].split(\"%20\").join(\" \").toLowerCase()) {\n        // setScore(appScore + 1);\n        setAppScore(appScore => appScore + 1);\n        setInputValue(\"\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown\",\n      children: [\"Countdown: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Guess The Song Name\",\n      type: \"text\",\n      value: inputValue,\n      onChange: event => handelInputChange(event.target.value),\n      onKeyDown: event => handleKeyDown(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"score\",\n      children: [\"score: \", appScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), createLyrics(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handelBackBtn,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"okoyMHsagz77KvVIWOtFHhyi940=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/linoyhorvat/Documents/bootcamp/Git/Projects/mid-project/songTrivia/src/components/Game.js"],"names":["React","useState","useEffect","Lyric","Results","browserHistory","Redirect","Game","setAppScore","appScore","songsArr","artistsArr","random","randomNum","setRandomNum","inputValue","setInputValue","counter","setCounter","setTimeout","console","log","split","join","randomChoice","handelBackBtn","window","history","back","handelInputChange","val","createLyrics","handleKeyDown","e","key","toLowerCase","event","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Lyric from \"./Lyric\";\r\nimport Results from \"./Results\";\r\nimport { browserHistory, Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport default function Game({setAppScore, appScore}) {\r\n  const songsArr = [\r\n    \"we%20will%20rock%20you\",\r\n    \"frozen\",\r\n    \"Beat%20It\",\r\n    \"Smells%20Like%20Teen%20Spirit\",\r\n    \"Billie%20Jean\",\r\n    \"let%20it%20be\"\r\n  ];\r\n  const artistsArr = [\r\n    \"queen\",\r\n    \"madonna\",\r\n    \"Michael%20Jackson\",\r\n    \"Nirvana\",\r\n    \"Michael%20Jackson\",\r\n    \"the%20beatles\"\r\n  ];\r\n  // let random = Math.floor(songsArr.length * Math.random());\r\n  let random = 5\r\n  const [randomNum, setRandomNum] = useState(random);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  // const [score, setScore] = useState(0);\r\n  const [counter, setCounter] = useState(1);\r\n  // const [timeOver, setTimeOver] = useState(false);\r\n\r\n  useEffect(() => {\r\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n    if (counter === 0) {\r\n      // window.location.href = \"/results\";\r\n      return  <Redirect to='/results'  />      \r\n      // browserHistory.push(\"/results\");\r\n    }\r\n  }, [counter]);\r\n\r\n  useEffect(() => {\r\n    console.log(songsArr[randomNum].split(\"%20\").join(\" \"));\r\n    randomChoice();\r\n    // setTimeOver(false);\r\n    // setCounter(60);\r\n  }, [appScore]);\r\n\r\n  const randomChoice = () => {\r\n    setRandomNum(random);\r\n  };\r\n  const handelBackBtn = () => {\r\n    window.history.back();\r\n  };\r\n  const handelInputChange = (val) => {\r\n    console.log(\"val\");\r\n    setInputValue(val);\r\n  };\r\n  const createLyrics = () => {\r\n    return (\r\n      <Lyric\r\n        songName={songsArr[randomNum]}\r\n        artistName={artistsArr[randomNum]}\r\n      />\r\n    );\r\n  };\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n\r\n      if (\r\n        inputValue == songsArr[randomNum].split(\"%20\").join(\" \").toLowerCase()\r\n      ) {\r\n        // setScore(appScore + 1);\r\n        setAppScore((appScore) => appScore + 1);\r\n        setInputValue(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"countdown\">Countdown: {counter}</div>\r\n      <input\r\n        placeholder=\"Guess The Song Name\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={(event) => handelInputChange(event.target.value)}\r\n        onKeyDown={(event) => handleKeyDown(event)}\r\n      />\r\n      <button className=\"score\">score: {appScore}</button>\r\n      {createLyrics()}\r\n      <button onClick={handelBackBtn}>Back</button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}