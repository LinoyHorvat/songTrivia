{"ast":null,"code":"var _jsxFileName = \"/Users/linoyhorvat/Documents/bootcamp/Git/Projects/mid-project/songTrivia/src/components/Lyric.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport XMLParser from 'react-xml-parser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Lyric = () => {\n  _s();\n\n  const songsName = ['we%20will%20rock%20you', 'frozen', 'Beat%20It', 'Smells%20Like%20Teen%20Spirit', 'Billie%20Jean'];\n  const artistName = ['queen', 'madonna', 'Michael%20Jackson', 'Nirvana', 'Michael%20Jackson'];\n  const [songChoice, setChoice] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [lyrics, setLyrics] = useState(null);\n\n  const randomChoice = () => {\n    let random = Math.floor(songsName.length * Math.random());\n    setChoice(random);\n    console.log(random);\n  };\n\n  const getData = async () => {\n    const {\n      data\n    } = await axios.get(`https://intense-mesa-62220.herokuapp.com/http://api.chartlyrics.com/apiv1.asmx/SearchLyricDirect?artist=${artistName}&song=${songName}`);\n    var xml = new XMLParser().parseFromString(data);\n    const data1 = xml.children[9].value;\n    console.log(data1);\n    setLyrics(data1);\n    setLoading(false);\n  };\n\n  useEffect(async () => {\n    setLoading(true);\n    randomChoice();\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: lyrics\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Lyric, \"Gc2fr+J2uNP4wMq1ddiDU97QV/E=\");\n\n_c = Lyric;\nexport default Lyric;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lyric\");","map":{"version":3,"sources":["/Users/linoyhorvat/Documents/bootcamp/Git/Projects/mid-project/songTrivia/src/components/Lyric.js"],"names":["React","useState","useEffect","axios","XMLParser","Lyric","songsName","artistName","songChoice","setChoice","isLoading","setLoading","lyrics","setLyrics","randomChoice","random","Math","floor","length","console","log","getData","data","get","songName","xml","parseFromString","data1","children","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,SAAS,GAAG,CAAC,wBAAD,EAA2B,QAA3B,EAAqC,WAArC,EAAiD,+BAAjD,EAAiF,eAAjF,CAAlB;AACA,QAAMC,UAAU,GAAE,CAAC,OAAD,EAAU,SAAV,EAAoB,mBAApB,EAAwC,SAAxC,EAAkD,mBAAlD,CAAlB;AACA,QAAM,CAACC,UAAD,EAAaC,SAAb,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,UAAZ,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMa,YAAY,GAAG,MAAM;AACzB,QAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWX,SAAS,CAACY,MAAV,GAAiBF,IAAI,CAACD,MAAL,EAA5B,CAAb;AACAN,IAAAA,SAAS,CAACM,MAAD,CAAT;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACD,GAJD;;AAMA,QAAMM,OAAO,GAAG,YAAW;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMnB,KAAK,CAACoB,GAAN,CACpB,2GAA0GhB,UAAW,SAAQiB,QAAS,EADlH,CAAvB;AAGA,QAAIC,GAAG,GAAG,IAAIrB,SAAJ,GAAgBsB,eAAhB,CAAgCJ,IAAhC,CAAV;AACA,UAAMK,KAAK,GAAGF,GAAG,CAACG,QAAJ,CAAa,CAAb,EAAgBC,KAA9B;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACAd,IAAAA,SAAS,CAACc,KAAD,CAAT;AACAhB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GATD;;AAWAT,EAAAA,SAAS,CAAC,YAAY;AACpBS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,IAAAA,YAAY;AACZO,IAAAA,OAAO;AACR,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACE;AAAA,cACGT;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAnCD;;GAAMP,K;;KAAAA,K;AAqCN,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport XMLParser from 'react-xml-parser';\n\n\nconst Lyric = () => {\n  const songsName = ['we%20will%20rock%20you', 'frozen', 'Beat%20It','Smells%20Like%20Teen%20Spirit','Billie%20Jean']\n  const artistName =['queen', 'madonna','Michael%20Jackson','Nirvana','Michael%20Jackson']\n  const [songChoice, setChoice] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [lyrics, setLyrics] = useState(null);\n  \n  const randomChoice = () => {\n    let random = Math.floor(songsName.length*Math.random());\n    setChoice(random)\n    console.log(random);\n  }\n\n  const getData = async() => {\n    const { data } = await axios.get(\n      `https://intense-mesa-62220.herokuapp.com/http://api.chartlyrics.com/apiv1.asmx/SearchLyricDirect?artist=${artistName}&song=${songName}`\n    );\n    var xml = new XMLParser().parseFromString(data); \n    const data1 = xml.children[9].value\n    console.log(data1);\n    setLyrics(data1);\n    setLoading(false);\n  }\n\n  useEffect(async () => {\n    setLoading(true);\n    randomChoice();\n    getData();\n  }, []);\n  return (\n    <div>\n      {lyrics}\n      \n    </div>\n  )\n}\n\nexport default Lyric\n"]},"metadata":{},"sourceType":"module"}