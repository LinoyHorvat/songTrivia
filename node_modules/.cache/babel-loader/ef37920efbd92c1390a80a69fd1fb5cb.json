{"ast":null,"code":"var _jsxFileName = \"/Users/linoyhorvat/Documents/bootcamp/Git/Projects/mid-project/songTrivia/src/components/Lyrics.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Lyrics = _ref => {\n  _s();\n\n  let {\n    songName,\n    artistName\n  } = _ref;\n  const [isLoading, setLoading] = useState(false);\n  const [lyrics, setLyrics] = useState(null);\n  useEffect(async () => {\n    setLoading(true);\n    const {\n      data\n    } = await axios.get(`https://intense-mesa-62220.herokuapp.com/http://api.chartlyrics.com/apiv1.asmx/SearchLyricDirect?artist=${artistName}&song=${songName}`);\n    var xml = new XMLParser().parseFromString(data);\n    const data1 = xml.children[9].value;\n    console.log(data1);\n    setLyrics(data1);\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: lyrics\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Lyrics, \"DqgcOK8x2qJakEbme3WaRInOL78=\");\n\n_c = Lyrics;\nexport default Lyrics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lyrics\");","map":{"version":3,"sources":["/Users/linoyhorvat/Documents/bootcamp/Git/Projects/mid-project/songTrivia/src/components/Lyrics.js"],"names":["React","useState","useEffect","axios","Lyrics","songName","artistName","isLoading","setLoading","lyrics","setLyrics","data","get","xml","XMLParser","parseFromString","data1","children","value","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,MAAM,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAA2B;AACzC,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,YAAY;AACpBM,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,GAAN,CACpB,2GAA0GN,UAAW,SAAQD,QAAS,EADlH,CAAvB;AAGA,QAAIQ,GAAG,GAAG,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCJ,IAAhC,CAAV;AACA,UAAMK,KAAK,GAAGH,GAAG,CAACI,QAAJ,CAAa,CAAb,EAAgBC,KAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAN,IAAAA,SAAS,CAACM,KAAD,CAAT;AACAR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAVQ,EAUN,EAVM,CAAT;AAWA,sBACE;AAAA,cACGC;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApBD;;GAAML,M;;KAAAA,M;AAsBN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n\nconst Lyrics = ({songName, artistName}) => {\n  const [isLoading, setLoading] = useState(false);\n  const [lyrics, setLyrics] = useState(null);\n\n  useEffect(async () => {\n    setLoading(true);\n    const { data } = await axios.get(\n      `https://intense-mesa-62220.herokuapp.com/http://api.chartlyrics.com/apiv1.asmx/SearchLyricDirect?artist=${artistName}&song=${songName}`\n    );\n    var xml = new XMLParser().parseFromString(data); \n    const data1 = xml.children[9].value\n    console.log(data1);\n    setLyrics(data1);\n    setLoading(false);\n  }, []);\n  return (\n    <div>\n      {lyrics}\n    </div>\n  )\n}\n\nexport default Lyrics\n"]},"metadata":{},"sourceType":"module"}