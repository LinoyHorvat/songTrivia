{"ast":null,"code":"var _jsxFileName = \"/Users/linoyhorvat/Documents/bootcamp/Git/Projects/mid-project/songTrivia/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport Lyric from \"./Lyric\"; // import Countdown from 'react-countdown';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  const songsArr = ['we%20will%20rock%20you', 'frozen', 'Beat%20It', 'Smells%20Like%20Teen%20Spirit', 'Billie%20Jean'];\n  const artistsArr = ['queen', 'madonna', 'Michael%20Jackson', 'Nirvana', 'Michael%20Jackson'];\n  let random = Math.floor(songsArr.length * Math.random());\n  const [randomNum, setRandomNum] = useState(random);\n  const [inputValue, setInputValue] = useState('');\n  const [score, setScore] = useState(0);\n  const [counter, setCounter] = React.useState(5);\n  const [timeOver, setTimeOver] = useState(false);\n  React.useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n\n    if (counter === 0) {\n      createLyrics();\n      setTimeOver(true);\n    }\n  }, [counter]);\n  useEffect(() => {\n    console.log(songsArr[randomNum].split('%20').join(' '));\n    randomChoice();\n    setTimeOver(false); // setCounter(5)\n  }, [timeOver]);\n\n  const randomChoice = () => {\n    setRandomNum(random);\n  };\n\n  const handelBackBtn = () => {\n    window.history.back();\n  };\n\n  const handelInputChange = val => {\n    console.log(inputValue);\n    setInputValue(val);\n\n    if (inputValue == songsArr[randomNum].split('%20').join(' ').toLowerCase()) {\n      console.log('correct');\n      setScore(score + 1);\n    }\n  };\n\n  const createLyrics = () => {\n    console.log(songsArr[0].split('%20').join(' ').toLowerCase());\n    return /*#__PURE__*/_jsxDEV(Lyric, {\n      songName: songsArr[randomNum],\n      artistName: artistsArr[randomNum]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Countdown: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Guess The Song Name\",\n      type: \"text\",\n      value: inputValue,\n      onChange: event => handelInputChange(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"score\",\n      children: [\"score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), createLyrics(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handelBackBtn,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"Scl+vYlvqBWhurJvUl04+qeIpxg=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/linoyhorvat/Documents/bootcamp/Git/Projects/mid-project/songTrivia/src/components/Game.js"],"names":["React","useState","useEffect","Lyric","Game","songsArr","artistsArr","random","Math","floor","length","randomNum","setRandomNum","inputValue","setInputValue","score","setScore","counter","setCounter","timeOver","setTimeOver","setTimeout","createLyrics","console","log","split","join","randomChoice","handelBackBtn","window","history","back","handelInputChange","val","toLowerCase","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\nimport Lyric from \"./Lyric\"\r\n// import Countdown from 'react-countdown';\r\n\r\n\r\nexport default function Game() {\r\n  const songsArr = ['we%20will%20rock%20you', 'frozen', 'Beat%20It','Smells%20Like%20Teen%20Spirit','Billie%20Jean']\r\n  const artistsArr =['queen', 'madonna','Michael%20Jackson','Nirvana','Michael%20Jackson']\r\n  let random = Math.floor(songsArr.length*Math.random());\r\n  const [randomNum, setRandomNum] = useState(random);\r\n  const [inputValue, setInputValue] = useState('')\r\n  const [score, setScore] = useState(0);\r\n  const [counter, setCounter] = React.useState(5);\r\n  const [timeOver, setTimeOver] = useState(false)\r\n  React.useEffect(() => {\r\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n    if (counter === 0){\r\n      createLyrics()\r\n      setTimeOver(true)\r\n    }\r\n  }, [counter]);\r\n  \r\n  useEffect( () => {\r\n    console.log(songsArr[randomNum].split('%20').join(' '));\r\n    randomChoice();\r\n    setTimeOver(false)\r\n    // setCounter(5)\r\n  },[timeOver])\r\n  \r\n  const randomChoice = () => {\r\n    setRandomNum(random)\r\n  }\r\n  const handelBackBtn = () => {\r\n    window.history.back();\r\n  }\r\n  const handelInputChange = (val) => {\r\n    console.log(inputValue);\r\n    setInputValue(val)\r\n    if (inputValue == songsArr[randomNum].split('%20').join(' ').toLowerCase()) {\r\n      console.log('correct');\r\n      setScore(score+1)\r\n    }\r\n  }\r\n  const createLyrics =() => {\r\n    console.log(songsArr[0].split('%20').join(' ').toLowerCase())\r\n\r\n    return <Lyric songName = {songsArr[randomNum]} artistName = {artistsArr[randomNum]}/>\r\n  }\r\n\r\n\r\n  return (\r\n    <div className = \"game-container\">\r\n    <div>Countdown: {counter}</div>\r\n    <input placeholder=\"Guess The Song Name\" type=\"text\" value = {inputValue} onChange={event => handelInputChange(event.target.value)}/>\r\n    <button className=\"score\">score: {score}</button>\r\n    {createLyrics()}\r\n    <button onClick={handelBackBtn}>Back</button>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}